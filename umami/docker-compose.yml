services:

  ################################################################################
  server:
    container_name: umami
    restart: unless-stopped
    init: true
    image: docker.umami.is/umami-software/umami:postgresql-latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
    expose:
      - 3000
    ports:
      - "127.0.0.1:3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      traefik.enable : false
      # traefik.http.routers.umami.rule : "Host(`umami.example.org`)"
      # traefik.http.routers.umami.entrypoints : "websecure"
      # traefik.http.routers.umami.tls.certresolver : "myresolver"
      # traefik.http.services.umami.loadbalancer.server.port : 3000

  ################################################################################
  db:
    container_name: umami-db
    restart: unless-stopped
    # for podman:
    # userns_mode: keep-id
    image: oci.guero.org/postgres:latest
    env_file: .env
    volumes:
      - type: bind
        bind:
          create_host_path: false
        source: ./data
        target: /var/lib/postgresql/data
    networks:
      - default
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s

networks:
  default:
    external: false
    # name: traefik-proxy
